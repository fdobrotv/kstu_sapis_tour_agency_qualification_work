/* tslint:disable */
/* eslint-disable */
/**
 * Tourist agency
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Flight } from './Flight';
import {
    FlightFromJSON,
    FlightFromJSONTyped,
    FlightToJSON,
} from './Flight';
import type { FoodOption } from './FoodOption';
import {
    FoodOptionFromJSON,
    FoodOptionFromJSONTyped,
    FoodOptionToJSON,
} from './FoodOption';
import type { Room } from './Room';
import {
    RoomFromJSON,
    RoomFromJSONTyped,
    RoomToJSON,
} from './Room';
import type { Transfer } from './Transfer';
import {
    TransferFromJSON,
    TransferFromJSONTyped,
    TransferToJSON,
} from './Transfer';

/**
 * 
 * @export
 * @interface Tour
 */
export interface Tour {
    /**
     * 
     * @type {string}
     * @memberof Tour
     */
    id: string;
    /**
     * 
     * @type {Flight}
     * @memberof Tour
     */
    departureFlight: Flight;
    /**
     * 
     * @type {Flight}
     * @memberof Tour
     */
    arrivalFlight: Flight;
    /**
     * 
     * @type {Transfer}
     * @memberof Tour
     */
    transferToHotel: Transfer;
    /**
     * 
     * @type {Transfer}
     * @memberof Tour
     */
    transferFromHotel: Transfer;
    /**
     * 
     * @type {string}
     * @memberof Tour
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof Tour
     */
    price: number;
    /**
     * 
     * @type {Room}
     * @memberof Tour
     */
    room: Room;
    /**
     * 
     * @type {FoodOption}
     * @memberof Tour
     */
    selectedFoodOption: FoodOption;
}

/**
 * Check if a given object implements the Tour interface.
 */
export function instanceOfTour(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "departureFlight" in value;
    isInstance = isInstance && "arrivalFlight" in value;
    isInstance = isInstance && "transferToHotel" in value;
    isInstance = isInstance && "transferFromHotel" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "room" in value;
    isInstance = isInstance && "selectedFoodOption" in value;

    return isInstance;
}

export function TourFromJSON(json: any): Tour {
    return TourFromJSONTyped(json, false);
}

export function TourFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tour {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'departureFlight': FlightFromJSON(json['departureFlight']),
        'arrivalFlight': FlightFromJSON(json['arrivalFlight']),
        'transferToHotel': TransferFromJSON(json['transferToHotel']),
        'transferFromHotel': TransferFromJSON(json['transferFromHotel']),
        'description': json['description'],
        'price': json['price'],
        'room': RoomFromJSON(json['room']),
        'selectedFoodOption': FoodOptionFromJSON(json['selectedFoodOption']),
    };
}

export function TourToJSON(value?: Tour | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'departureFlight': FlightToJSON(value.departureFlight),
        'arrivalFlight': FlightToJSON(value.arrivalFlight),
        'transferToHotel': TransferToJSON(value.transferToHotel),
        'transferFromHotel': TransferToJSON(value.transferFromHotel),
        'description': value.description,
        'price': value.price,
        'room': RoomToJSON(value.room),
        'selectedFoodOption': FoodOptionToJSON(value.selectedFoodOption),
    };
}

