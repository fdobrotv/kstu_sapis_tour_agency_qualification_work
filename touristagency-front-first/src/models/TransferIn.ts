/* tslint:disable */
/* eslint-disable */
/**
 * Tourist agency
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransferIn
 */
export interface TransferIn {
    /**
     * 
     * @type {string}
     * @memberof TransferIn
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TransferIn
     */
    carId: string;
    /**
     * 
     * @type {string}
     * @memberof TransferIn
     */
    departureCoordinates: string;
    /**
     * 
     * @type {string}
     * @memberof TransferIn
     */
    arrivalCoordinates: string;
    /**
     * 
     * @type {number}
     * @memberof TransferIn
     */
    price: number;
    /**
     * 
     * @type {Date}
     * @memberof TransferIn
     */
    departureDateTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransferIn
     */
    arrivalDateTime: Date;
    /**
     * 
     * @type {boolean}
     * @memberof TransferIn
     */
    isGuideIncluded: boolean;
}

/**
 * Check if a given object implements the TransferIn interface.
 */
export function instanceOfTransferIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "carId" in value;
    isInstance = isInstance && "departureCoordinates" in value;
    isInstance = isInstance && "arrivalCoordinates" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "departureDateTime" in value;
    isInstance = isInstance && "arrivalDateTime" in value;
    isInstance = isInstance && "isGuideIncluded" in value;

    return isInstance;
}

export function TransferInFromJSON(json: any): TransferIn {
    return TransferInFromJSONTyped(json, false);
}

export function TransferInFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'carId': json['carId'],
        'departureCoordinates': json['departureCoordinates'],
        'arrivalCoordinates': json['arrivalCoordinates'],
        'price': json['price'],
        'departureDateTime': (new Date(json['departureDateTime'])),
        'arrivalDateTime': (new Date(json['arrivalDateTime'])),
        'isGuideIncluded': json['isGuideIncluded'],
    };
}

export function TransferInToJSON(value?: TransferIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'carId': value.carId,
        'departureCoordinates': value.departureCoordinates,
        'arrivalCoordinates': value.arrivalCoordinates,
        'price': value.price,
        'departureDateTime': (value.departureDateTime.toISOString()),
        'arrivalDateTime': (value.arrivalDateTime.toISOString()),
        'isGuideIncluded': value.isGuideIncluded,
    };
}

