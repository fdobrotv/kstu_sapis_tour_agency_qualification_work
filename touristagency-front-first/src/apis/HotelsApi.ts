/* tslint:disable */
/* eslint-disable */
/**
 * Tourist agency
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Hotel,
  HotelIn,
} from '../models/index';
import {
    HotelFromJSON,
    HotelToJSON,
    HotelInFromJSON,
    HotelInToJSON,
} from '../models/index';

export interface CreateHotelRequest {
    hotelIn?: HotelIn;
}

export interface DeleteHotelByIdRequest {
    id: string;
}

export interface ListHotelsRequest {
    limit?: number;
}

export interface ShowHotelByIdRequest {
    id: string;
}

/**
 * 
 */
export class HotelsApi extends runtime.BaseAPI {

    /**
     * Create a hotel
     */
    async createHotelRaw(requestParameters: CreateHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Hotel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/hotels`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HotelInToJSON(requestParameters.hotelIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HotelFromJSON(jsonValue));
    }

    /**
     * Create a hotel
     */
    async createHotel(requestParameters: CreateHotelRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Hotel> {
        const response = await this.createHotelRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete specific hotel by id
     */
    async deleteHotelByIdRaw(requestParameters: DeleteHotelByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteHotelById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hotels/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete specific hotel by id
     */
    async deleteHotelById(requestParameters: DeleteHotelByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteHotelByIdRaw(requestParameters, initOverrides);
    }

    /**
     * List all hotels
     */
    async listHotelsRaw(requestParameters: ListHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Hotel>>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hotels`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(HotelFromJSON));
    }

    /**
     * List all hotels
     */
    async listHotels(requestParameters: ListHotelsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Hotel>> {
        const response = await this.listHotelsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Info for a specific hotel
     */
    async showHotelByIdRaw(requestParameters: ShowHotelByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Hotel>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling showHotelById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/hotels/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HotelFromJSON(jsonValue));
    }

    /**
     * Info for a specific hotel
     */
    async showHotelById(requestParameters: ShowHotelByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Hotel> {
        const response = await this.showHotelByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
