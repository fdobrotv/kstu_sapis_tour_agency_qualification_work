/* tslint:disable */
/* eslint-disable */
/**
 * Tourist agency
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Flight
 */
export interface Flight {
    /**
     * 
     * @type {string}
     * @memberof Flight
     */
    departureAirport: string;
    /**
     * 
     * @type {string}
     * @memberof Flight
     */
    arrivalAirport: string;
    /**
     * 
     * @type {Date}
     * @memberof Flight
     */
    departureDateTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof Flight
     */
    arrivalDateTime: Date;
    /**
     * 
     * @type {string}
     * @memberof Flight
     */
    id: string;
}

/**
 * Check if a given object implements the Flight interface.
 */
export function instanceOfFlight(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "departureAirport" in value;
    isInstance = isInstance && "arrivalAirport" in value;
    isInstance = isInstance && "departureDateTime" in value;
    isInstance = isInstance && "arrivalDateTime" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function FlightFromJSON(json: any): Flight {
    return FlightFromJSONTyped(json, false);
}

export function FlightFromJSONTyped(json: any, ignoreDiscriminator: boolean): Flight {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'departureAirport': json['departureAirport'],
        'arrivalAirport': json['arrivalAirport'],
        'departureDateTime': (new Date(json['departureDateTime'])),
        'arrivalDateTime': (new Date(json['arrivalDateTime'])),
        'id': json['id'],
    };
}

export function FlightToJSON(value?: Flight | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'departureAirport': value.departureAirport,
        'arrivalAirport': value.arrivalAirport,
        'departureDateTime': (value.departureDateTime.toISOString()),
        'arrivalDateTime': (value.arrivalDateTime.toISOString()),
        'id': value.id,
    };
}

